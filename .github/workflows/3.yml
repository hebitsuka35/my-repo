name: Naming
on: push
jobs:
    print:
        name: Super Useful job
        runs-on: ubuntu-latest
        steps:
            - name: Amazing Script
              run: echo "Hello"

# name: Contexts
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "${{github.actor}}"

# env:
#     BRANCH: main

# name: Environment variables
# on: push
# jobs:
#     run:
#         runs-on: ubuntu-latest
#         env:
#             BRANCH: main
#         steps:
#             - run: echo "${BRANCH}"
#             - uses: actions/checkout@v4
#                 with:
#                     ref: ${{ env.BRANCH}}

# name: Override environment variables
# on: push
# env:
#     EXAMPLE: Defined by workflow level
# jobs:
#     print:
#         runs-on: ubunts-latest
#         steps: 
#             - run: echo "${EXAMPLE}"
#             - env:
#                 EXAMPLE: Defined by step level
             
# name: Immediate environment variables
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             ACTOR: ${{github.actor}}
#         steps:
#             - run: echo "${ACTOR}"

# name: Variables
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             USERNAME: ${{vars.USERNAME}}
#         steps:
#             - run: echo "${USERNAME}"

# name: Secrets
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             PASSWORD: ${{secrets.PASSWORD}}
#         steps:
#             - run: echo "${PASSWORD}"
#             - run: echo "${PASSWORD:0:1}" ${PASSWORD#?}

# name: Literals
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps:
#             - run: printenv | grep 'LITERAL_'
#               env:
#                 LITERAL_NULL: ${{null}}
#                 LITERAL_BOOLEAN: ${{true}}
#                 LITERAL_NUMBER: ${{1234}}
#                 LITERAL_STRING: ${{'Hello'}}
#                 LITERAL_OMIT_STRING: World

# name: Compare Functions
# on: push
# jobs:
#      compare:
#         runs-on: ubuntu-latest
#         steps:
#             - run: printenv | grep '_FUNC_'
#               env:
#                 CONTAINS_FUNC: ${{ contains('Hello','ell')}}
#                 STARTS_WITH_FUNC: ${{ startsWith('Hello','He')}}
#                 END_WITH_FUNC: ${{ contains('Hello','lo')}}

# name: Generate functions
# on: push
# jobs:
#     generate:
#         runs-on: ubuntu-latest
#         sgteps:
#                 - run: printenv | grep '_FUNC_'
#                   env:
#                     FORMAT_FUNC: ${{ format('{0},{1}.','Hi','World')}}
#                     JOIN_FUNC: ${{ join(github.event.*.html_url,',')}}

# name: JSON functions
# on: push
# jobs:
#     dump:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "${CONTRXT}"
#               env:
#                 CONTEXT: ${{toJSON(github)}}

# name: Hash functions
# on: push
# jobs:
#     hash:
#         runs-on: ubutu-latest
#         steps:
#             - uses: actions/checkout@v4
#             - runs: echo "${HASH}"
#               env:
#                 HASH: ${{ hashFiles('.github/workflows/*.yml') }}

# name: Conditions
# on: push
# jobs:
#     skip-or-run:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "Hello"
#               if: ${{ contains(github.run_id, '1') }}

# name: Status check functions
# on: push
# jobs:
#     fail:
#         runs-on: ubuntu-latest
#         steps:
#             - run: exit 1
#             - run: echo "Hello"
#               if: ${{ failure() }}

# name: Conditions workflow
# on: push
# jobs:
#     skip-or-run:
#         if: ${{ github.actor  }}

